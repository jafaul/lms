version: 2.1
orbs:
  python: circleci/python@2

jobs:
  test-python:
    docker:
      - image: cimg/python:3.12-node
      - image: postgres:16
        name: postgres
        environment:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: example
          POSTGRES_DB: testdb
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - run: sleep 10
      - run:
          name: Set Postgres User Dynamically
          command: |
            PGPASSWORD=example psql -h postgres -U postgres -d testdb -c "CREATE USER $DB_USERNAME WITH PASSWORD 'example' SUPERUSER;" || echo "User already exists"

            echo "export POSTGRES_USER=$DB_USERNAME" >> $BASH_ENV
            source $BASH_ENV

      #      todo    add new user $DB_USERNAME into psql
#      todo    source $BASH_ENV
      - run:
          name: Print Database Username
          command: |
            echo "Database Username: $POSTGRES_USER"
      - run:
          name: Check Database Connection
          command: |
            PGPASSWORD=example psql -h postgres -U $DB_USERNAME -d testdb -c "SELECT 1;"
      - python/install-packages:
          pkg-manager: poetry

      - run:
          name: Run tests
          command: poetry run python manage.py test

workflows:
  build-and-test:
    jobs:
      - test-python
