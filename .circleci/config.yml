version: 2.1
orbs:
  python: circleci/python@2

jobs:
  test-python:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - run:
          name: Create .env file
          command: |
            echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" > .env
            echo "AWS_S3_REGION_NAME=$AWS_S3_REGION_NAME" >> .env
            echo "AWS_S3_SIGNATURE_NAME=$AWS_S3_SIGNATURE_NAME" >> .env
            echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env
            echo "AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME" >> .env
            echo "DB_HOST=$DB_HOST" >> .env
            echo "DB_NAME=$DB_NAME" >> .env
            echo "DB_PASSWORD=$DB_PASSWORD" >> .env
            echo "DB_PORT=$DB_PORT" >> .env
            echo "DB_USERNAME=$DB_USERNAME" >> .env
            echo "DEBUG=$DEBUG" >> .env
            echo "DJANGO_DEBUG=$DJANGO_DEBUG" >> .env
            echo "DJANGO_PROJECT_PORT=$DJANGO_PROJECT_PORT" >> .env
            echo "DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY" >> .env
            echo "DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE" >> .env
            echo "EMAIL_HOST=$EMAIL_HOST" >> .env
            echo "EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD" >> .env
            echo "EMAIL_HOST_USER=$EMAIL_HOST_USER" >> .env
            echo "EMAIL_PORT=$EMAIL_PORT" >> .env
            echo "EMAIL_USE_TLS=$EMAIL_USE_TLS" >> .env
            echo "REDIS_ADDR=$REDIS_ADDR" >> .env
            echo "SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=$SOCIAL_AUTH_GOOGLE_OAUTH2_KEY" >> .env
            echo "SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=$SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET" >> .env

      - python/install-packages:
          pkg-manager: poetry

      - run:
          name: Run tests
          command: make test

workflows:
  build-and-test:
    jobs:
      - test-python
