services:
  postgres:
    image: postgres:16
    environment:
        POSTGRES_USER: ${DB_USERNAME}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_HOST: ${DB_HOST}
        POSTGRES_DB: ${DB_NAME}
    env_file:
      - .env
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
      
  redis:
    image: redis:7.4.2
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes_from:
      - django-web
    command: /bin/bash -c "cd /src; celery -A apps.celery_app worker -E"

  celerybeat:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes_from:
      - django-web
    command: /bin/bash -c "cd /src; celery -A apps.celery_app beat -l INFO  --scheduler django_celery_beat.schedulers:DatabaseScheduler"

  django-web:
    build:
      context: /home/circleci/project
      dockerfile: Dockerfile
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=${DEBUG}
    volumes:
      - .:/src
      - static:/static
    working_dir: /src
    env_file:
     - .env
    command: "/bin/bash -c 'pwd; cd src; python manage.py migrate; python3 manage.py runserver 0.0.0.0:8080'"
    depends_on:
      - postgres
    ports:
      - "${DJANGO_PROJECT_PORT}:${DJANGO_PROJECT_PORT}"

volumes:
  pgdata:
  static:
